DROP DATABASE IF EXISTS SELECTSPUNTAPALA;
CREATE DATABASE IF NOT EXISTS SELECTSPUNTAPALA;
USE SELECTSPUNTAPALA;

CREATE TABLE IF NOT EXISTS CLIENTES (
IDCLIENTE VARCHAR(9) PRIMARY KEY NOT NULL,
NOMBRE VARCHAR(20),
DIRECCION VARCHAR(50),
POBLACION VARCHAR(15),
FACTURACION DECIMAL(18,1),
FECHAALTA DATE,
CREDITO DECIMAL(18,1)
);

INSERT INTO CLIENTES (IDCLIENTE, NOMBRE, DIRECCION, POBLACION, FACTURACION, FECHAALTA, CREDITO) VALUES
('12345678A', 'RAFA', 'ARTE HERRERIANO 5', 'MADRID', 1550.55 , '2014-10-25', 2000),
('87654321B', 'JUAN', 'CALLE REAL 10', 'MADRID', 2500.75 , '2015-05-15', 3000),
('11223344C', 'MARÍA', NULL, 'VALENCIA', 1800.20 , '2016-03-12', 1500),
('55667788D', 'ANA', 'AVENIDA SOL 15', 'SEVILLA', 150005.60 , '2017-12-01', 1500),
('99887766E', 'LUIS', 'CALLE FLORIDA 7', 'BARCELONA', 1700.90 , '2024-07-19', 2800),
('33445566F', 'JORGE', NULL, 'BARCELONA', 180000.00 , '2019-04-10', 3100),
('22334455G', 'LAURA', 'CALLE NUEVA 12', 'BILBAO', 2400.45 , '2020-09-23', 1600),
('77889900H', 'CARLOS', 'CALLE MAYOR 20', 'BARCELONA', 25200.30 , '2024-01-30', 3200),
('66554433I', 'PABLO', 'CALLE OLMO 9', 'LEÓN', 1950.75 , '2022-06-14', 2700),
('44556677J', 'SARA', 'CALLE RIO 22', 'MADRID', 2250.85 , '2023-02-18', 3300);

CREATE TABLE IF NOT EXISTS FILIAL(
IDFILIAL INT PRIMARY KEY NOT NULL,
NOMBRE VARCHAR(20),
IDCLIENTE VARCHAR(9),
FOREIGN KEY (IDCLIENTE) REFERENCES CLIENTES(IDCLIENTE) ON DELETE CASCADE
);

INSERT INTO FILIAL (IDFILIAL, NOMBRE, IDCLIENTE) VALUES
(1, 'JOSUE', '12345678A'),    
(2, 'MARCO', '87654321B'),     
(3, 'ELENA', '11223344C'),     
(4, 'MARIO', '55667788D'),     
(5, 'CLAUDIA', '99887766E'),  
(6, 'DAVID', '33445566F'),     
(7, 'PATRICIA', '22334455G'),  
(8, 'ADRIÁN', '77889900H'),    
(9, 'VERÓNICA', '66554433I'),  
(10, 'ROBERTO', NULL); 

SELECT * FROM CLIENTES;
SELECT IDCLIENTE, NOMBRE FROM CLIENTES;
SELECT DISTINCT POBLACION FROM CLIENTES;
SELECT * FROM CLIENTES ORDER BY FECHAALTA; -- SELECT * FROM CLIENTES ORDER BY FECHAALTA DESC; (DESCENDIENTE)
SELECT IDCLIENTE FROM CLIENTES WHERE CREDITO > 2000;
SELECT NOMBRE, FACTURACION AS FACTURACION_ORIGINAL, (FACTURACION - 1000) AS FACTURACION_REDUCIDA FROM CLIENTES;
SELECT NOMBRE, FACTURACION AS FACTURACION_ORIGINAL, (FACTURACION * 0.1) AS FACTURACION_REDUCIDAO FROM CLIENTES;
SELECT * FROM CLIENTES WHERE FACTURACION >= 15000;
SELECT * FROM CLIENTES WHERE FACTURACION < 20000;
SELECT * FROM CLIENTES WHERE POBLACION = 'MADRID';
SELECT * FROM CLIENTES WHERE POBLACION = 'MADRID' OR POBLACION = 'BARCELONA';
SELECT * FROM CLIENTES WHERE NOMBRE LIKE 'CLIENTE';
SELECT * FROM CLIENTES WHERE FACTURACION BETWEEN 15000 and 25000;
SELECT * FROM CLIENTES WHERE POBLACION IN ('MADRID', 'BARCELONA', 'VALENCIA');
SELECT * FROM CLIENTES WHERE DIRECCION IS NULL;
SELECT C.NOMBRE, F.NOMBRE, IDFILIAL FROM CLIENTES C JOIN FILIAL F WHERE C.IDCLIENTE=F.IDCLIENTE;
SELECT C.*, F.NOMBRE FROM CLIENTES C LEFT JOIN FILIAL F ON C.IDCLIENTE=F.IDCLIENTE; 
-- SELECT FACTURACION, SUM(FACTURACION) AS TOTAL_FACTURACION FROM CLIENTES GROUP BY POBLACION DESC; 
SELECT POBLACION, SUM(FACTURACION) AS TOTAL_FACTURACION FROM CLIENTES GROUP BY POBLACION HAVING POBLACION > 40000;
SELECT * FROM CLIENTES ORDER BY CREDITO ASC;
SELECT * FROM CLIENTES WHERE FACTURACION > (SELECT AVG(FACTURACION) FROM CLIENTES);
-- UPDATE CLIENTES SET CREDITO = 5000 WHERE POBLACION = MADRID;
-- DELETE FROM CLIENTES WHERE FACTURACION < 10000;
SELECT COUNT(*) AS TOTALCLIENTES FROM CLIENTES;
SELECT AVG(FACTURACION) AS FACTURACIONMEDIA FROM CLIENTES;
SELECT MAX(FACTURACION) AS FACTURACIONMAXIMA FROM CLIENTES;
SELECT MIN(FACTURACION) AS FACTURACIONMINIMA FROM CLIENTES;
SELECT SUM(CREDITO) AS SUMACREDITO FROM CLIENTES;
SELECT COUNT(DISTINCT POBLACION) AS NTPOBLACION FROM CLIENTES;
SELECT * FROM CLIENTES WHERE FECHAALTA > '2023-06-01';
SELECT * FROM CLIENTES WHERE POBLACION NOT IN ('MADRID', 'BARCELONA');
SELECT * FROM CLIENTES ORDER BY FACTURACION DESC LIMIT 5;
SELECT * FROM CLIENTES ORDER BY FECHAALTA LIMIT 5 OFFSET 3;
SELECT * FROM CLIENTES ORDER BY NOMBRE NOT LIKE 'CLIENTE';
SELECT C.*, F.* FROM CLIENTES C INNER JOIN FILIAL F WHERE C.IDCLIENTE=F.IDCLIENTE AND C.FACTURACION > 20000;
-- No existe el SELF JOIN
-- SELECT * FROM CLIENTES WHERE FACTURACION > (SELECT AVG(F.FACTURACION) FROM FILIAL F WHERE F.IDCLIENTE IS NOT NULL);
SELECT F.IDFILIAL, F.NOMBRE AS NOMBRE_FILIAL, C.IDCLIENTE, C.NOMBRE AS NOMBRE_CLIENTE, C.DIRECCION, C.POBLACION, C.FACTURACION FROM FILIAL F RIGHT JOIN CLIENTES C ON F.IDCLIENTE = C.IDCLIENTE;
-- no existe full outer join
-- SELECT C.IDCLIENTE, C.NOMBRE, C.FACTURACION FROM CLIENTES C WHERE C.FACTURACION > (SELECT MAX(F.FACTURACION) FROM FILIAL F WHERE F.IDCLIENTE = C.IDCLIENTE);
SELECT C.IDCLIENTE, C.NOMBRE, COUNT(F.IDFILIAL) AS CANTIDAD_FILIALES FROM CLIENTES C LEFT JOIN FILIAL F ON C.IDCLIENTE = F.IDCLIENTE GROUP BY C.IDCLIENTE, C.NOMBRE;
SELECT F.IDFILIAL, F.NOMBRE AS NOMBRE_FILIAL, C.IDCLIENTE, C.NOMBRE AS NOMBRE_CLIENTE, C.FACTURACION FROM FILIAL F RIGHT JOIN CLIENTES C ON F.IDCLIENTE = C.IDCLIENTE WHERE C.FACTURACION > 20000;
SELECT C.NOMBRE, (SELECT COUNT(F.IDFILIAL) FROM FILIAL F WHERE F.IDCLIENTE = C.IDCLIENTE) AS TOTAL_FILIALES FROM CLIENTES C;
SELECT C.IDCLIENTE, C.NOMBRE FROM CLIENTES C LEFT JOIN FILIAL F ON C.IDCLIENTE = F.IDCLIENTE WHERE F.IDFILIAL IS NULL;
SELECT F.IDFILIAL, F.NOMBRE FROM FILIAL F RIGHT JOIN CLIENTES C ON F.IDCLIENTE = C.IDCLIENTE WHERE C.IDCLIENTE IS NULL;
SELECT C.IDCLIENTE, C.NOMBRE FROM CLIENTES C INNER JOIN FILIAL F ON C.IDCLIENTE = F.IDCLIENTE GROUP BY C.IDCLIENTE, C.NOMBRE HAVING COUNT(F.IDFILIAL) > 1;
-- SELECT C.IDCLIENTE, C.NOMBRE, C.FACTURACION FROM CLIENTES C WHERE C.FACTURACION > (SELECT MAX(F.FACTURACION) FROM FILIAL F);




